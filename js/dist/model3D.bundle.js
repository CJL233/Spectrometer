(()=>{function e(){requestAnimationFrame(e),Model3D.controls.update(),Model3D.renderer.render(Model3D.scene,Model3D.camera)}window.Model3D={renderer:new THREE.WebGLRenderer({alpha:!0}),scene:new THREE.Scene,camera:null,controls:null,gltf:null,geometry:null,init:function(){const t=this.scene,n=this.renderer,r=new THREE.GLTFLoader;return t.environment=new THREE.PMREMGenerator(n).fromScene(new THREE.RoomEnvironment,.04).texture,n.setClearAlpha(0),n.setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),n.outputEncoding=THREE.sRGBEncoding,document.body.appendChild(this.renderer.domElement),n.domElement.id="drawArea",this.camera=new THREE.PerspectiveCamera(40,window.innerWidth/window.innerHeight,1,1e3),this.camera.position.set(5,2,8),this.controls=new THREE.OrbitControls(this.camera,n.domElement),this.controls.update(),this.controls.enablePan=!1,this.controls.enableDamping=!0,this.geometry=new THREE.BufferGeometry,this.geometry.setAttribute("position",new THREE.BufferAttribute(new Float32Array(24),3)),this.geometry.setDrawRange(0,0),this.scene.add(new THREE.Line(this.geometry,new THREE.LineBasicMaterial({color:16007990,linewidth:1}))),new Promise(((t,n)=>{r.load("./models/structure.glb",(n=>{this.gltf={Structure:n.scene,Protractor:n.scene.getObjectByName("Protractor"),Platform:n.scene.getObjectByName("Platform"),platform:n.scene.getObjectByName("platform01"),lenses:[null,...n.scene.getObjectByName("platform01").children]},this.scene.add(n.scene),e(),t("Success")}),void 0,n)}))}},window.onresize=function(){Model3D.camera.aspect=window.innerWidth/window.innerHeight,Model3D.camera.updateProjectionMatrix(),Model3D.renderer.setSize(window.innerWidth,window.innerHeight)},window.Model3D.drawLines=function(e,t){const n=Model3D.geometry.attributes.position.array,r=[e.start,e.end,...t.map((e=>e.end))],o=r.length;for(let e=0;e<o;e++)n[3*e]=r[e].x/285,n[3*e+1]=r[e].z/285+2.35,n[3*e+2]=-r[e].y/285;this.geometry.setDrawRange(0,o),this.geometry.attributes.position.needsUpdate=!0}})();